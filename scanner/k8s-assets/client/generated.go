// SPDX-FileCopyrightText: 2024 SAP SE or an SAP affiliate company and Greenhouse contributors
// SPDX-License-Identifier: Apache-2.0

// Code generated by github.com/Khan/genqlient, DO NOT EDIT.

package client

import (
	"context"

	"github.com/Khan/genqlient/graphql"
)

// AddServiceToSupportGroupResponse is returned by AddServiceToSupportGroup on success.
type AddServiceToSupportGroupResponse struct {
	AddServiceToSupportGroup *SupportGroup `json:"addServiceToSupportGroup"`
}

// GetAddServiceToSupportGroup returns AddServiceToSupportGroupResponse.AddServiceToSupportGroup, and is useful for accessing the field via an interface.
func (v *AddServiceToSupportGroupResponse) GetAddServiceToSupportGroup() *SupportGroup {
	return v.AddServiceToSupportGroup
}

// Component includes the requested fields of the GraphQL type Component.
type Component struct {
	Id   string              `json:"id"`
	Ccrn string              `json:"ccrn"`
	Type ComponentTypeValues `json:"type"`
}

// GetId returns Component.Id, and is useful for accessing the field via an interface.
func (v *Component) GetId() string { return v.Id }

// GetCcrn returns Component.Ccrn, and is useful for accessing the field via an interface.
func (v *Component) GetCcrn() string { return v.Ccrn }

// GetType returns Component.Type, and is useful for accessing the field via an interface.
func (v *Component) GetType() ComponentTypeValues { return v.Type }

// ComponentConnection includes the requested fields of the GraphQL type ComponentConnection.
type ComponentConnection struct {
	TotalCount int                                      `json:"totalCount"`
	Edges      []*ComponentConnectionEdgesComponentEdge `json:"edges"`
}

// GetTotalCount returns ComponentConnection.TotalCount, and is useful for accessing the field via an interface.
func (v *ComponentConnection) GetTotalCount() int { return v.TotalCount }

// GetEdges returns ComponentConnection.Edges, and is useful for accessing the field via an interface.
func (v *ComponentConnection) GetEdges() []*ComponentConnectionEdgesComponentEdge { return v.Edges }

// ComponentConnectionEdgesComponentEdge includes the requested fields of the GraphQL type ComponentEdge.
type ComponentConnectionEdgesComponentEdge struct {
	Node *Component `json:"node"`
}

// GetNode returns ComponentConnectionEdgesComponentEdge.Node, and is useful for accessing the field via an interface.
func (v *ComponentConnectionEdgesComponentEdge) GetNode() *Component { return v.Node }

type ComponentFilter struct {
	ComponentCcrn []string `json:"componentCcrn"`
}

// GetComponentCcrn returns ComponentFilter.ComponentCcrn, and is useful for accessing the field via an interface.
func (v *ComponentFilter) GetComponentCcrn() []string { return v.ComponentCcrn }

// ComponentInstance includes the requested fields of the GraphQL type ComponentInstance.
type ComponentInstance struct {
	Id                 string `json:"id"`
	Ccrn               string `json:"ccrn"`
	Count              int    `json:"count"`
	ComponentVersionId string `json:"componentVersionId"`
	ServiceId          string `json:"serviceId"`
}

// GetId returns ComponentInstance.Id, and is useful for accessing the field via an interface.
func (v *ComponentInstance) GetId() string { return v.Id }

// GetCcrn returns ComponentInstance.Ccrn, and is useful for accessing the field via an interface.
func (v *ComponentInstance) GetCcrn() string { return v.Ccrn }

// GetCount returns ComponentInstance.Count, and is useful for accessing the field via an interface.
func (v *ComponentInstance) GetCount() int { return v.Count }

// GetComponentVersionId returns ComponentInstance.ComponentVersionId, and is useful for accessing the field via an interface.
func (v *ComponentInstance) GetComponentVersionId() string { return v.ComponentVersionId }

// GetServiceId returns ComponentInstance.ServiceId, and is useful for accessing the field via an interface.
func (v *ComponentInstance) GetServiceId() string { return v.ServiceId }

type ComponentInstanceFilter struct {
	IssueMatchId []string `json:"issueMatchId"`
}

// GetIssueMatchId returns ComponentInstanceFilter.IssueMatchId, and is useful for accessing the field via an interface.
func (v *ComponentInstanceFilter) GetIssueMatchId() []string { return v.IssueMatchId }

type ComponentInstanceInput struct {
	Ccrn               string `json:"ccrn"`
	Count              int    `json:"count"`
	ComponentVersionId string `json:"componentVersionId"`
	ServiceId          string `json:"serviceId"`
}

// GetCcrn returns ComponentInstanceInput.Ccrn, and is useful for accessing the field via an interface.
func (v *ComponentInstanceInput) GetCcrn() string { return v.Ccrn }

// GetCount returns ComponentInstanceInput.Count, and is useful for accessing the field via an interface.
func (v *ComponentInstanceInput) GetCount() int { return v.Count }

// GetComponentVersionId returns ComponentInstanceInput.ComponentVersionId, and is useful for accessing the field via an interface.
func (v *ComponentInstanceInput) GetComponentVersionId() string { return v.ComponentVersionId }

// GetServiceId returns ComponentInstanceInput.ServiceId, and is useful for accessing the field via an interface.
func (v *ComponentInstanceInput) GetServiceId() string { return v.ServiceId }

type ComponentTypeValues string

const (
	ComponentTypeValuesContainerimage      ComponentTypeValues = "containerImage"
	ComponentTypeValuesVirtualmachineimage ComponentTypeValues = "virtualMachineImage"
	ComponentTypeValuesRepository          ComponentTypeValues = "repository"
)

// ComponentVersion includes the requested fields of the GraphQL type ComponentVersion.
type ComponentVersion struct {
	Id          string `json:"id"`
	Ccrn        string `json:"ccrn"`
	Version     string `json:"version"`
	ComponentId string `json:"componentId"`
}

// GetId returns ComponentVersion.Id, and is useful for accessing the field via an interface.
func (v *ComponentVersion) GetId() string { return v.Id }

// GetCcrn returns ComponentVersion.Ccrn, and is useful for accessing the field via an interface.
func (v *ComponentVersion) GetCcrn() string { return v.Ccrn }

// GetVersion returns ComponentVersion.Version, and is useful for accessing the field via an interface.
func (v *ComponentVersion) GetVersion() string { return v.Version }

// GetComponentId returns ComponentVersion.ComponentId, and is useful for accessing the field via an interface.
func (v *ComponentVersion) GetComponentId() string { return v.ComponentId }

// ComponentVersionConnection includes the requested fields of the GraphQL type ComponentVersionConnection.
type ComponentVersionConnection struct {
	TotalCount int                                                    `json:"totalCount"`
	Edges      []*ComponentVersionConnectionEdgesComponentVersionEdge `json:"edges"`
}

// GetTotalCount returns ComponentVersionConnection.TotalCount, and is useful for accessing the field via an interface.
func (v *ComponentVersionConnection) GetTotalCount() int { return v.TotalCount }

// GetEdges returns ComponentVersionConnection.Edges, and is useful for accessing the field via an interface.
func (v *ComponentVersionConnection) GetEdges() []*ComponentVersionConnectionEdgesComponentVersionEdge {
	return v.Edges
}

// ComponentVersionConnectionEdgesComponentVersionEdge includes the requested fields of the GraphQL type ComponentVersionEdge.
type ComponentVersionConnectionEdgesComponentVersionEdge struct {
	Node *ComponentVersion `json:"node"`
}

// GetNode returns ComponentVersionConnectionEdgesComponentVersionEdge.Node, and is useful for accessing the field via an interface.
func (v *ComponentVersionConnectionEdgesComponentVersionEdge) GetNode() *ComponentVersion {
	return v.Node
}

type ComponentVersionFilter struct {
	Ccrn          []string `json:"ccrn"`
	ComponentId   []string `json:"componentId"`
	ComponentCcrn []string `json:"componentCcrn"`
	IssueId       []string `json:"issueId"`
	Version       []string `json:"version"`
}

// GetCcrn returns ComponentVersionFilter.Ccrn, and is useful for accessing the field via an interface.
func (v *ComponentVersionFilter) GetCcrn() []string { return v.Ccrn }

// GetComponentId returns ComponentVersionFilter.ComponentId, and is useful for accessing the field via an interface.
func (v *ComponentVersionFilter) GetComponentId() []string { return v.ComponentId }

// GetComponentCcrn returns ComponentVersionFilter.ComponentCcrn, and is useful for accessing the field via an interface.
func (v *ComponentVersionFilter) GetComponentCcrn() []string { return v.ComponentCcrn }

// GetIssueId returns ComponentVersionFilter.IssueId, and is useful for accessing the field via an interface.
func (v *ComponentVersionFilter) GetIssueId() []string { return v.IssueId }

// GetVersion returns ComponentVersionFilter.Version, and is useful for accessing the field via an interface.
func (v *ComponentVersionFilter) GetVersion() []string { return v.Version }

type ComponentVersionInput struct {
	Ccrn        string `json:"ccrn"`
	Version     string `json:"version"`
	ComponentId string `json:"componentId"`
}

// GetCcrn returns ComponentVersionInput.Ccrn, and is useful for accessing the field via an interface.
func (v *ComponentVersionInput) GetCcrn() string { return v.Ccrn }

// GetVersion returns ComponentVersionInput.Version, and is useful for accessing the field via an interface.
func (v *ComponentVersionInput) GetVersion() string { return v.Version }

// GetComponentId returns ComponentVersionInput.ComponentId, and is useful for accessing the field via an interface.
func (v *ComponentVersionInput) GetComponentId() string { return v.ComponentId }

// CreateComponentInstanceResponse is returned by CreateComponentInstance on success.
type CreateComponentInstanceResponse struct {
	CreateComponentInstance *ComponentInstance `json:"createComponentInstance"`
}

// GetCreateComponentInstance returns CreateComponentInstanceResponse.CreateComponentInstance, and is useful for accessing the field via an interface.
func (v *CreateComponentInstanceResponse) GetCreateComponentInstance() *ComponentInstance {
	return v.CreateComponentInstance
}

// CreateComponentVersionCreateComponentVersion includes the requested fields of the GraphQL type ComponentVersion.
type CreateComponentVersionCreateComponentVersion struct {
	Id          string `json:"id"`
	Ccrn        string `json:"ccrn"`
	Version     string `json:"version"`
	ComponentId string `json:"componentId"`
}

// GetId returns CreateComponentVersionCreateComponentVersion.Id, and is useful for accessing the field via an interface.
func (v *CreateComponentVersionCreateComponentVersion) GetId() string { return v.Id }

// GetCcrn returns CreateComponentVersionCreateComponentVersion.Ccrn, and is useful for accessing the field via an interface.
func (v *CreateComponentVersionCreateComponentVersion) GetCcrn() string { return v.Ccrn }

// GetVersion returns CreateComponentVersionCreateComponentVersion.Version, and is useful for accessing the field via an interface.
func (v *CreateComponentVersionCreateComponentVersion) GetVersion() string { return v.Version }

// GetComponentId returns CreateComponentVersionCreateComponentVersion.ComponentId, and is useful for accessing the field via an interface.
func (v *CreateComponentVersionCreateComponentVersion) GetComponentId() string { return v.ComponentId }

// CreateComponentVersionResponse is returned by CreateComponentVersion on success.
type CreateComponentVersionResponse struct {
	CreateComponentVersion *CreateComponentVersionCreateComponentVersion `json:"createComponentVersion"`
}

// GetCreateComponentVersion returns CreateComponentVersionResponse.CreateComponentVersion, and is useful for accessing the field via an interface.
func (v *CreateComponentVersionResponse) GetCreateComponentVersion() *CreateComponentVersionCreateComponentVersion {
	return v.CreateComponentVersion
}

// CreateServiceResponse is returned by CreateService on success.
type CreateServiceResponse struct {
	CreateService *Service `json:"createService"`
}

// GetCreateService returns CreateServiceResponse.CreateService, and is useful for accessing the field via an interface.
func (v *CreateServiceResponse) GetCreateService() *Service { return v.CreateService }

// CreateSupportGroupResponse is returned by CreateSupportGroup on success.
type CreateSupportGroupResponse struct {
	CreateSupportGroup *SupportGroup `json:"createSupportGroup"`
}

// GetCreateSupportGroup returns CreateSupportGroupResponse.CreateSupportGroup, and is useful for accessing the field via an interface.
func (v *CreateSupportGroupResponse) GetCreateSupportGroup() *SupportGroup {
	return v.CreateSupportGroup
}

// ListComponentInstancesComponentInstancesComponentInstanceConnection includes the requested fields of the GraphQL type ComponentInstanceConnection.
type ListComponentInstancesComponentInstancesComponentInstanceConnection struct {
	TotalCount int                                                                                              `json:"totalCount"`
	Edges      []*ListComponentInstancesComponentInstancesComponentInstanceConnectionEdgesComponentInstanceEdge `json:"edges"`
}

// GetTotalCount returns ListComponentInstancesComponentInstancesComponentInstanceConnection.TotalCount, and is useful for accessing the field via an interface.
func (v *ListComponentInstancesComponentInstancesComponentInstanceConnection) GetTotalCount() int {
	return v.TotalCount
}

// GetEdges returns ListComponentInstancesComponentInstancesComponentInstanceConnection.Edges, and is useful for accessing the field via an interface.
func (v *ListComponentInstancesComponentInstancesComponentInstanceConnection) GetEdges() []*ListComponentInstancesComponentInstancesComponentInstanceConnectionEdgesComponentInstanceEdge {
	return v.Edges
}

// ListComponentInstancesComponentInstancesComponentInstanceConnectionEdgesComponentInstanceEdge includes the requested fields of the GraphQL type ComponentInstanceEdge.
type ListComponentInstancesComponentInstancesComponentInstanceConnectionEdgesComponentInstanceEdge struct {
	Node *ListComponentInstancesComponentInstancesComponentInstanceConnectionEdgesComponentInstanceEdgeNodeComponentInstance `json:"node"`
}

// GetNode returns ListComponentInstancesComponentInstancesComponentInstanceConnectionEdgesComponentInstanceEdge.Node, and is useful for accessing the field via an interface.
func (v *ListComponentInstancesComponentInstancesComponentInstanceConnectionEdgesComponentInstanceEdge) GetNode() *ListComponentInstancesComponentInstancesComponentInstanceConnectionEdgesComponentInstanceEdgeNodeComponentInstance {
	return v.Node
}

// ListComponentInstancesComponentInstancesComponentInstanceConnectionEdgesComponentInstanceEdgeNodeComponentInstance includes the requested fields of the GraphQL type ComponentInstance.
type ListComponentInstancesComponentInstancesComponentInstanceConnectionEdgesComponentInstanceEdgeNodeComponentInstance struct {
	Id string `json:"id"`
}

// GetId returns ListComponentInstancesComponentInstancesComponentInstanceConnectionEdgesComponentInstanceEdgeNodeComponentInstance.Id, and is useful for accessing the field via an interface.
func (v *ListComponentInstancesComponentInstancesComponentInstanceConnectionEdgesComponentInstanceEdgeNodeComponentInstance) GetId() string {
	return v.Id
}

// ListComponentInstancesResponse is returned by ListComponentInstances on success.
type ListComponentInstancesResponse struct {
	ComponentInstances *ListComponentInstancesComponentInstancesComponentInstanceConnection `json:"ComponentInstances"`
}

// GetComponentInstances returns ListComponentInstancesResponse.ComponentInstances, and is useful for accessing the field via an interface.
func (v *ListComponentInstancesResponse) GetComponentInstances() *ListComponentInstancesComponentInstancesComponentInstanceConnection {
	return v.ComponentInstances
}

// ListComponentVersionsResponse is returned by ListComponentVersions on success.
type ListComponentVersionsResponse struct {
	ComponentVersions *ComponentVersionConnection `json:"ComponentVersions"`
}

// GetComponentVersions returns ListComponentVersionsResponse.ComponentVersions, and is useful for accessing the field via an interface.
func (v *ListComponentVersionsResponse) GetComponentVersions() *ComponentVersionConnection {
	return v.ComponentVersions
}

// ListComponentsResponse is returned by ListComponents on success.
type ListComponentsResponse struct {
	Components *ComponentConnection `json:"Components"`
}

// GetComponents returns ListComponentsResponse.Components, and is useful for accessing the field via an interface.
func (v *ListComponentsResponse) GetComponents() *ComponentConnection { return v.Components }

// ListServicesResponse is returned by ListServices on success.
type ListServicesResponse struct {
	Services *ListServicesServicesServiceConnection `json:"Services"`
}

// GetServices returns ListServicesResponse.Services, and is useful for accessing the field via an interface.
func (v *ListServicesResponse) GetServices() *ListServicesServicesServiceConnection {
	return v.Services
}

// ListServicesServicesServiceConnection includes the requested fields of the GraphQL type ServiceConnection.
type ListServicesServicesServiceConnection struct {
	TotalCount int                                                      `json:"totalCount"`
	Edges      []*ListServicesServicesServiceConnectionEdgesServiceEdge `json:"edges"`
}

// GetTotalCount returns ListServicesServicesServiceConnection.TotalCount, and is useful for accessing the field via an interface.
func (v *ListServicesServicesServiceConnection) GetTotalCount() int { return v.TotalCount }

// GetEdges returns ListServicesServicesServiceConnection.Edges, and is useful for accessing the field via an interface.
func (v *ListServicesServicesServiceConnection) GetEdges() []*ListServicesServicesServiceConnectionEdgesServiceEdge {
	return v.Edges
}

// ListServicesServicesServiceConnectionEdgesServiceEdge includes the requested fields of the GraphQL type ServiceEdge.
type ListServicesServicesServiceConnectionEdgesServiceEdge struct {
	Node *ListServicesServicesServiceConnectionEdgesServiceEdgeNodeService `json:"node"`
}

// GetNode returns ListServicesServicesServiceConnectionEdgesServiceEdge.Node, and is useful for accessing the field via an interface.
func (v *ListServicesServicesServiceConnectionEdgesServiceEdge) GetNode() *ListServicesServicesServiceConnectionEdgesServiceEdgeNodeService {
	return v.Node
}

// ListServicesServicesServiceConnectionEdgesServiceEdgeNodeService includes the requested fields of the GraphQL type Service.
type ListServicesServicesServiceConnectionEdgesServiceEdgeNodeService struct {
	Id string `json:"id"`
}

// GetId returns ListServicesServicesServiceConnectionEdgesServiceEdgeNodeService.Id, and is useful for accessing the field via an interface.
func (v *ListServicesServicesServiceConnectionEdgesServiceEdgeNodeService) GetId() string {
	return v.Id
}

// ListSupportGroupsResponse is returned by ListSupportGroups on success.
type ListSupportGroupsResponse struct {
	SupportGroups *ListSupportGroupsSupportGroupsSupportGroupConnection `json:"SupportGroups"`
}

// GetSupportGroups returns ListSupportGroupsResponse.SupportGroups, and is useful for accessing the field via an interface.
func (v *ListSupportGroupsResponse) GetSupportGroups() *ListSupportGroupsSupportGroupsSupportGroupConnection {
	return v.SupportGroups
}

// ListSupportGroupsSupportGroupsSupportGroupConnection includes the requested fields of the GraphQL type SupportGroupConnection.
type ListSupportGroupsSupportGroupsSupportGroupConnection struct {
	TotalCount int                                                                          `json:"totalCount"`
	Edges      []*ListSupportGroupsSupportGroupsSupportGroupConnectionEdgesSupportGroupEdge `json:"edges"`
}

// GetTotalCount returns ListSupportGroupsSupportGroupsSupportGroupConnection.TotalCount, and is useful for accessing the field via an interface.
func (v *ListSupportGroupsSupportGroupsSupportGroupConnection) GetTotalCount() int {
	return v.TotalCount
}

// GetEdges returns ListSupportGroupsSupportGroupsSupportGroupConnection.Edges, and is useful for accessing the field via an interface.
func (v *ListSupportGroupsSupportGroupsSupportGroupConnection) GetEdges() []*ListSupportGroupsSupportGroupsSupportGroupConnectionEdgesSupportGroupEdge {
	return v.Edges
}

// ListSupportGroupsSupportGroupsSupportGroupConnectionEdgesSupportGroupEdge includes the requested fields of the GraphQL type SupportGroupEdge.
type ListSupportGroupsSupportGroupsSupportGroupConnectionEdgesSupportGroupEdge struct {
	Node *ListSupportGroupsSupportGroupsSupportGroupConnectionEdgesSupportGroupEdgeNodeSupportGroup `json:"node"`
}

// GetNode returns ListSupportGroupsSupportGroupsSupportGroupConnectionEdgesSupportGroupEdge.Node, and is useful for accessing the field via an interface.
func (v *ListSupportGroupsSupportGroupsSupportGroupConnectionEdgesSupportGroupEdge) GetNode() *ListSupportGroupsSupportGroupsSupportGroupConnectionEdgesSupportGroupEdgeNodeSupportGroup {
	return v.Node
}

// ListSupportGroupsSupportGroupsSupportGroupConnectionEdgesSupportGroupEdgeNodeSupportGroup includes the requested fields of the GraphQL type SupportGroup.
type ListSupportGroupsSupportGroupsSupportGroupConnectionEdgesSupportGroupEdgeNodeSupportGroup struct {
	Id string `json:"id"`
}

// GetId returns ListSupportGroupsSupportGroupsSupportGroupConnectionEdgesSupportGroupEdgeNodeSupportGroup.Id, and is useful for accessing the field via an interface.
func (v *ListSupportGroupsSupportGroupsSupportGroupConnectionEdgesSupportGroupEdgeNodeSupportGroup) GetId() string {
	return v.Id
}

// Service includes the requested fields of the GraphQL type Service.
type Service struct {
	Id   string `json:"id"`
	Ccrn string `json:"ccrn"`
}

// GetId returns Service.Id, and is useful for accessing the field via an interface.
func (v *Service) GetId() string { return v.Id }

// GetCcrn returns Service.Ccrn, and is useful for accessing the field via an interface.
func (v *Service) GetCcrn() string { return v.Ccrn }

type ServiceFilter struct {
	ServiceCcrn      []string `json:"serviceCcrn"`
	UniqueUserId     []string `json:"uniqueUserId"`
	Type             []int    `json:"type"`
	UserName         []string `json:"userName"`
	SupportGroupCcrn []string `json:"supportGroupCcrn"`
	Search           []string `json:"search"`
}

// GetServiceCcrn returns ServiceFilter.ServiceCcrn, and is useful for accessing the field via an interface.
func (v *ServiceFilter) GetServiceCcrn() []string { return v.ServiceCcrn }

// GetUniqueUserId returns ServiceFilter.UniqueUserId, and is useful for accessing the field via an interface.
func (v *ServiceFilter) GetUniqueUserId() []string { return v.UniqueUserId }

// GetType returns ServiceFilter.Type, and is useful for accessing the field via an interface.
func (v *ServiceFilter) GetType() []int { return v.Type }

// GetUserName returns ServiceFilter.UserName, and is useful for accessing the field via an interface.
func (v *ServiceFilter) GetUserName() []string { return v.UserName }

// GetSupportGroupCcrn returns ServiceFilter.SupportGroupCcrn, and is useful for accessing the field via an interface.
func (v *ServiceFilter) GetSupportGroupCcrn() []string { return v.SupportGroupCcrn }

// GetSearch returns ServiceFilter.Search, and is useful for accessing the field via an interface.
func (v *ServiceFilter) GetSearch() []string { return v.Search }

type ServiceInput struct {
	Ccrn string `json:"ccrn"`
}

// GetCcrn returns ServiceInput.Ccrn, and is useful for accessing the field via an interface.
func (v *ServiceInput) GetCcrn() string { return v.Ccrn }

// SupportGroup includes the requested fields of the GraphQL type SupportGroup.
type SupportGroup struct {
	Id   string `json:"id"`
	Ccrn string `json:"ccrn"`
}

// GetId returns SupportGroup.Id, and is useful for accessing the field via an interface.
func (v *SupportGroup) GetId() string { return v.Id }

// GetCcrn returns SupportGroup.Ccrn, and is useful for accessing the field via an interface.
func (v *SupportGroup) GetCcrn() string { return v.Ccrn }

type SupportGroupFilter struct {
	SupportGroupCcrn []string `json:"supportGroupCcrn"`
	UserIds          []string `json:"userIds"`
}

// GetSupportGroupCcrn returns SupportGroupFilter.SupportGroupCcrn, and is useful for accessing the field via an interface.
func (v *SupportGroupFilter) GetSupportGroupCcrn() []string { return v.SupportGroupCcrn }

// GetUserIds returns SupportGroupFilter.UserIds, and is useful for accessing the field via an interface.
func (v *SupportGroupFilter) GetUserIds() []string { return v.UserIds }

type SupportGroupInput struct {
	Ccrn string `json:"ccrn"`
}

// GetCcrn returns SupportGroupInput.Ccrn, and is useful for accessing the field via an interface.
func (v *SupportGroupInput) GetCcrn() string { return v.Ccrn }

// __AddServiceToSupportGroupInput is used internally by genqlient
type __AddServiceToSupportGroupInput struct {
	SupportGroupId string `json:"supportGroupId"`
	ServiceId      string `json:"serviceId"`
}

// GetSupportGroupId returns __AddServiceToSupportGroupInput.SupportGroupId, and is useful for accessing the field via an interface.
func (v *__AddServiceToSupportGroupInput) GetSupportGroupId() string { return v.SupportGroupId }

// GetServiceId returns __AddServiceToSupportGroupInput.ServiceId, and is useful for accessing the field via an interface.
func (v *__AddServiceToSupportGroupInput) GetServiceId() string { return v.ServiceId }

// __CreateComponentInstanceInput is used internally by genqlient
type __CreateComponentInstanceInput struct {
	Input *ComponentInstanceInput `json:"input,omitempty"`
}

// GetInput returns __CreateComponentInstanceInput.Input, and is useful for accessing the field via an interface.
func (v *__CreateComponentInstanceInput) GetInput() *ComponentInstanceInput { return v.Input }

// __CreateComponentVersionInput is used internally by genqlient
type __CreateComponentVersionInput struct {
	Input *ComponentVersionInput `json:"input,omitempty"`
}

// GetInput returns __CreateComponentVersionInput.Input, and is useful for accessing the field via an interface.
func (v *__CreateComponentVersionInput) GetInput() *ComponentVersionInput { return v.Input }

// __CreateServiceInput is used internally by genqlient
type __CreateServiceInput struct {
	Input *ServiceInput `json:"input,omitempty"`
}

// GetInput returns __CreateServiceInput.Input, and is useful for accessing the field via an interface.
func (v *__CreateServiceInput) GetInput() *ServiceInput { return v.Input }

// __CreateSupportGroupInput is used internally by genqlient
type __CreateSupportGroupInput struct {
	Input *SupportGroupInput `json:"input,omitempty"`
}

// GetInput returns __CreateSupportGroupInput.Input, and is useful for accessing the field via an interface.
func (v *__CreateSupportGroupInput) GetInput() *SupportGroupInput { return v.Input }

// __ListComponentInstancesInput is used internally by genqlient
type __ListComponentInstancesInput struct {
	Filter *ComponentInstanceFilter `json:"filter,omitempty"`
}

// GetFilter returns __ListComponentInstancesInput.Filter, and is useful for accessing the field via an interface.
func (v *__ListComponentInstancesInput) GetFilter() *ComponentInstanceFilter { return v.Filter }

// __ListComponentVersionsInput is used internally by genqlient
type __ListComponentVersionsInput struct {
	Filter *ComponentVersionFilter `json:"filter,omitempty"`
}

// GetFilter returns __ListComponentVersionsInput.Filter, and is useful for accessing the field via an interface.
func (v *__ListComponentVersionsInput) GetFilter() *ComponentVersionFilter { return v.Filter }

// __ListComponentsInput is used internally by genqlient
type __ListComponentsInput struct {
	Filter *ComponentFilter `json:"filter,omitempty"`
}

// GetFilter returns __ListComponentsInput.Filter, and is useful for accessing the field via an interface.
func (v *__ListComponentsInput) GetFilter() *ComponentFilter { return v.Filter }

// __ListServicesInput is used internally by genqlient
type __ListServicesInput struct {
	Filter *ServiceFilter `json:"filter,omitempty"`
}

// GetFilter returns __ListServicesInput.Filter, and is useful for accessing the field via an interface.
func (v *__ListServicesInput) GetFilter() *ServiceFilter { return v.Filter }

// __ListSupportGroupsInput is used internally by genqlient
type __ListSupportGroupsInput struct {
	Filter *SupportGroupFilter `json:"filter,omitempty"`
}

// GetFilter returns __ListSupportGroupsInput.Filter, and is useful for accessing the field via an interface.
func (v *__ListSupportGroupsInput) GetFilter() *SupportGroupFilter { return v.Filter }

// The query or mutation executed by AddServiceToSupportGroup.
const AddServiceToSupportGroup_Operation = `
mutation AddServiceToSupportGroup ($supportGroupId: ID!, $serviceId: ID!) {
	addServiceToSupportGroup(supportGroupId: $supportGroupId, serviceId: $serviceId) {
		id
		ccrn
	}
}
`

func AddServiceToSupportGroup(
	ctx_ context.Context,
	client_ graphql.Client,
	supportGroupId string,
	serviceId string,
) (*AddServiceToSupportGroupResponse, error) {
	req_ := &graphql.Request{
		OpName: "AddServiceToSupportGroup",
		Query:  AddServiceToSupportGroup_Operation,
		Variables: &__AddServiceToSupportGroupInput{
			SupportGroupId: supportGroupId,
			ServiceId:      serviceId,
		},
	}
	var err_ error

	var data_ AddServiceToSupportGroupResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by CreateComponentInstance.
const CreateComponentInstance_Operation = `
mutation CreateComponentInstance ($input: ComponentInstanceInput!) {
	createComponentInstance(input: $input) {
		id
		ccrn
		count
		componentVersionId
		serviceId
	}
}
`

func CreateComponentInstance(
	ctx_ context.Context,
	client_ graphql.Client,
	input *ComponentInstanceInput,
) (*CreateComponentInstanceResponse, error) {
	req_ := &graphql.Request{
		OpName: "CreateComponentInstance",
		Query:  CreateComponentInstance_Operation,
		Variables: &__CreateComponentInstanceInput{
			Input: input,
		},
	}
	var err_ error

	var data_ CreateComponentInstanceResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by CreateComponentVersion.
const CreateComponentVersion_Operation = `
mutation CreateComponentVersion ($input: ComponentVersionInput!) {
	createComponentVersion(input: $input) {
		id
		ccrn
		version
		componentId
	}
}
`

func CreateComponentVersion(
	ctx_ context.Context,
	client_ graphql.Client,
	input *ComponentVersionInput,
) (*CreateComponentVersionResponse, error) {
	req_ := &graphql.Request{
		OpName: "CreateComponentVersion",
		Query:  CreateComponentVersion_Operation,
		Variables: &__CreateComponentVersionInput{
			Input: input,
		},
	}
	var err_ error

	var data_ CreateComponentVersionResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by CreateService.
const CreateService_Operation = `
mutation CreateService ($input: ServiceInput!) {
	createService(input: $input) {
		id
		ccrn
	}
}
`

func CreateService(
	ctx_ context.Context,
	client_ graphql.Client,
	input *ServiceInput,
) (*CreateServiceResponse, error) {
	req_ := &graphql.Request{
		OpName: "CreateService",
		Query:  CreateService_Operation,
		Variables: &__CreateServiceInput{
			Input: input,
		},
	}
	var err_ error

	var data_ CreateServiceResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by CreateSupportGroup.
const CreateSupportGroup_Operation = `
mutation CreateSupportGroup ($input: SupportGroupInput!) {
	createSupportGroup(input: $input) {
		id
		ccrn
	}
}
`

func CreateSupportGroup(
	ctx_ context.Context,
	client_ graphql.Client,
	input *SupportGroupInput,
) (*CreateSupportGroupResponse, error) {
	req_ := &graphql.Request{
		OpName: "CreateSupportGroup",
		Query:  CreateSupportGroup_Operation,
		Variables: &__CreateSupportGroupInput{
			Input: input,
		},
	}
	var err_ error

	var data_ CreateSupportGroupResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by ListComponentInstances.
const ListComponentInstances_Operation = `
query ListComponentInstances ($filter: ComponentInstanceFilter) {
	ComponentInstances(filter: $filter) {
		totalCount
		edges {
			node {
				id
			}
		}
	}
}
`

func ListComponentInstances(
	ctx_ context.Context,
	client_ graphql.Client,
	filter *ComponentInstanceFilter,
) (*ListComponentInstancesResponse, error) {
	req_ := &graphql.Request{
		OpName: "ListComponentInstances",
		Query:  ListComponentInstances_Operation,
		Variables: &__ListComponentInstancesInput{
			Filter: filter,
		},
	}
	var err_ error

	var data_ ListComponentInstancesResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by ListComponentVersions.
const ListComponentVersions_Operation = `
query ListComponentVersions ($filter: ComponentVersionFilter) {
	ComponentVersions(filter: $filter) {
		totalCount
		edges {
			node {
				id
				ccrn
				version
				componentId
			}
		}
	}
}
`

func ListComponentVersions(
	ctx_ context.Context,
	client_ graphql.Client,
	filter *ComponentVersionFilter,
) (*ListComponentVersionsResponse, error) {
	req_ := &graphql.Request{
		OpName: "ListComponentVersions",
		Query:  ListComponentVersions_Operation,
		Variables: &__ListComponentVersionsInput{
			Filter: filter,
		},
	}
	var err_ error

	var data_ ListComponentVersionsResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by ListComponents.
const ListComponents_Operation = `
query ListComponents ($filter: ComponentFilter) {
	Components(filter: $filter) {
		totalCount
		edges {
			node {
				id
				ccrn
				type
			}
		}
	}
}
`

func ListComponents(
	ctx_ context.Context,
	client_ graphql.Client,
	filter *ComponentFilter,
) (*ListComponentsResponse, error) {
	req_ := &graphql.Request{
		OpName: "ListComponents",
		Query:  ListComponents_Operation,
		Variables: &__ListComponentsInput{
			Filter: filter,
		},
	}
	var err_ error

	var data_ ListComponentsResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by ListServices.
const ListServices_Operation = `
query ListServices ($filter: ServiceFilter) {
	Services(filter: $filter) {
		totalCount
		edges {
			node {
				id
			}
		}
	}
}
`

func ListServices(
	ctx_ context.Context,
	client_ graphql.Client,
	filter *ServiceFilter,
) (*ListServicesResponse, error) {
	req_ := &graphql.Request{
		OpName: "ListServices",
		Query:  ListServices_Operation,
		Variables: &__ListServicesInput{
			Filter: filter,
		},
	}
	var err_ error

	var data_ ListServicesResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}

// The query or mutation executed by ListSupportGroups.
const ListSupportGroups_Operation = `
query ListSupportGroups ($filter: SupportGroupFilter) {
	SupportGroups(filter: $filter) {
		totalCount
		edges {
			node {
				id
			}
		}
	}
}
`

func ListSupportGroups(
	ctx_ context.Context,
	client_ graphql.Client,
	filter *SupportGroupFilter,
) (*ListSupportGroupsResponse, error) {
	req_ := &graphql.Request{
		OpName: "ListSupportGroups",
		Query:  ListSupportGroups_Operation,
		Variables: &__ListSupportGroupsInput{
			Filter: filter,
		},
	}
	var err_ error

	var data_ ListSupportGroupsResponse
	resp_ := &graphql.Response{Data: &data_}

	err_ = client_.MakeRequest(
		ctx_,
		req_,
		resp_,
	)

	return &data_, err_
}
