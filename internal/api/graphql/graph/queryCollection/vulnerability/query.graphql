# SPDX-FileCopyrightText: 2025 SAP SE or an SAP affiliate company and Greenhouse contributors
# SPDX-License-Identifier: Apache-2.0

query GetVulnerabilities(
  $filter: VulnerabilityFilter
  $first: Int
  $after: String
  $firstServices: Int
  $afterServices: String
) {
  # This query is designed for the Vulnerability List page in the UI
  # - Only returns Issues of type Vulnerability
  # - Only returns Issues with at least one IssueMatch with status "new"
  # - It's ordered by severity per default
  # - Default page size is 10, but can be overridden by the $first parameter
  Vulnerabilities(filter: $filter, first: $first, after: $after) {
    # Counts will result in a subquery. Request only if needed.
    # Counts number of Vulnerabilities per severity
    counts {
      critical
      high
      medium
      low
      none
      total
    }
    edges {
      node {
        # Severity will result in a subquery. Request only if needed.
        severity
        name
        # sourceUrl will result in a subquery. Request only if needed.
        sourceUrl
        # earliestTargetRemediationDate will result in a subquery. Request only if needed.
        earliestTargetRemediationDate
        description
        # The services list is ordered by ccrn/name per default
        # Default page size is 10, but can be overridden by the $first parameter
        services(first: $firstServices, after: $afterServices) {
          # Total count will result in a subquery. Request only if needed.
          totalCount
          edges {
            node {
              ccrn
            }
          }
          # Requesting pageInfo will result in a subquery. Request only if needed.
          pageInfo {
            pageNumber
            pages {
              after
              pageNumber
            }
          }
        }
        # The support group list is ordered by ccrn per default
        supportGroups{
          edges{
            node{
              ccrn
            }
          }
        }
      }
    }
    # Total count will result in a subquery. Request only if needed.
    totalCount
    # Requesting pageInfo will result in a subquery. Request only if needed.
    pageInfo {
        hasNextPage
        hasPreviousPage
        isValidPage
        pageNumber
        nextPageAfter
        pages {
            after
            isCurrent
            pageNumber
            pageCount
        }
    }
  }
}
